version: 2.1

orbs:
  node: circleci/node@5.1.0
  win: circleci/windows@5.0.0

executors:
  linux:
    docker:
      - image: cimg/base:stable
  macos:
    macos:
      xcode: '13.4.0'
    resource_class: macos.x86.medium.gen2
  windows:
    machine:
      image: windows-server-2019-vs2019:stable
      resource_class: windows.medium
      shell: bash

commands:
  install:
    parameters:
      platform:
        type: string
    steps:
      - run: git config --global core.autocrlf input
      - checkout
      - node/install:
          install-yarn: true
          node-version: '18.4.0'
      - run: nvm use 18.4.0
      - run: echo "THIS IS THE OS- << parameters.platform >>"
      - when:
          condition:
            equal: ['windows', << parameters.platform >>]
          steps:
            - run:
                name: Install npm 8 on Windows
                command: |
                  npm install -g npm@8
      - restore_cache:
          name: Restore Cached Dependencies
          keys:
            - v1-dependencies-{{ arch }}-{{ checksum "yarn.lock" }}
            - v1-dependencies{{ arch }}
      - run: yarn install --frozen-lockfile
      - save_cache:
          name: Cache Installed Dependencies
          paths:
            - node_modules
          key: v1-dependencies-{{ arch }}-{{ checksum "yarn.lock" }}

jobs:
  fast-tests:
    parameters:
      platform:
        type: string
      arch:
        type: enum
        enum: ['x64', 'arm64']
    executor: << parameters.platform >>
    steps:
      - install:
          platform: '<< parameters.platform >>'
      - run: yarn lint
      - run: yarn syncpack
      - run: yarn build
      - run: yarn test:fast
  slow-tests:
    parameters:
      platform:
        type: string
      arch:
        type: enum
        enum: ['x64', 'arm64']
    executor: << parameters.platform >>
    steps:
      - install:
          platform: '<< parameters.platform >>'
      - run: yarn lint
      - when:
          condition:
            equal: ['windows', << parameters.platform >>]
          steps:
            - run:
                name: Windows specific setup
                command: |
                  echo 'C:\Program Files (x86)\WiX Toolset v3.11\bin' >> $GITHUB_PATH
                  npm config set node-gyp "$GITHUB_WORKSPACE\node_modules\node-gyp\bin\node-gyp.js"
      - when:
          condition:
            equal: ['linux', << parameters.platform >>]
          steps:
            - run:
                name: Linux Specific setup
                command: |
                  sudo add-apt-repository -y ppa:alexlarsson/flatpak
                  sudo rm /etc/apt/sources.list.d/bazel.list
                  sudo rm /etc/apt/sources.list.d/mongo*.list
                  grep -l opensuse /etc/apt/sources.list.d/* | xargs sudo rm
                  sudo apt-get update
                  sudo apt-get install -y --no-install-recommends snapcraft flatpak-builder elfutils
                  ci/install_runtimes.sh
      - run: yarn build
      - run: yarn test:slow

workflows:
  tests:
    jobs:
      - fast-tests:
          matrix:
            parameters:
              platform: [windows, linux, macos]
              arch: [x64, arm64]
            exclude:
              - platform: windows
                arch: arm64
              - platform: linux
                arch: arm64
      - slow-tests:
          matrix:
            parameters:
              platform: [windows, linux, macos]
              arch: [x64, arm64]
            exclude:
              - platform: windows
                arch: arm64
              - platform: linux
                arch: arm64
