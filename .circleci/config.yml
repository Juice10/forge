version: 2.1

orbs:
  node: circleci/node@5.1.0
  win: circleci/windows@5.0.0

executors:
  linux:
    docker:
      - image: ubuntudesktop/gnome-3-38-2004
  macos:
    macos:
      xcode: '13.4.0'
    resource_class: macos.x86.medium.gen2
  windows:
    machine:
      image: windows-server-2019-vs2019:stable
      resource_class: windows.medium
      shell: bash

commands:
  setup-windows:
    steps:
      - run:
          name: windows-specific-setup
          shell: powershell.exe -ExecutionPolicy Bypass
          command: |
            Write-Output "Installing WiX Toolset"
            choco install --no-progress -y wixtoolset
            Write-Output "Reloading PATH"
            $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
            echo $env:Path
            [Environment]::SetEnvironmentVariable("PATH", $env:Path + "C:\Program Files (x86)\WiX Toolset v3.11\bin;", "Machine")
            refreshenv
            $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
            echo $env:Path
            npm config set node-gyp "$CIRCLE_WORKING_DIRECTORY\node_modules\node-gyp\bin\node-gyp.js"

  install:
    parameters:
      platform:
        type: string
    steps:
      - run: git config --global core.autocrlf input
      - node/install:
          node-version: '14.18.0'
      - run: nvm use 14.18.0
      - checkout
      - restore_cache:
          name: Restore Cached Dependencies
          keys:
            - v1-dependencies-{{ arch }}-{{ checksum "yarn.lock" }}
            - v1-dependencies{{ arch }}
      - run: npm install --global yarn
      - run: yarn install --frozen-lockfile
      - save_cache:
          name: Cache Installed Dependencies
          paths:
            - node_modules
          key: v1-dependencies-{{ arch }}-{{ checksum "yarn.lock" }}

jobs:
  fast-tests:
    parameters:
      platform:
        type: string
      arch:
        type: enum
        enum: ['x64', 'arm64']
    executor: << parameters.platform >>
    steps:
      - when:
          condition:
            or:
              - equal: ['windows', << parameters.platform >>]
              - equal: ['macos', << parameters.platform >>]
          steps:
            - install:
                platform: '<< parameters.platform >>'
            - run: yarn lint
      - when:
          condition:
            equal: ['windows', << parameters.platform >>]
          steps:
            run:
              name: setup Windows and run fast tests
              shell: powershell.exe -ExecutionPolicy Bypass
              command: |
                git config --global core.autocrlf input
                Write-Output "Installing WiX Toolset"
                choco install --no-progress -y wixtoolset
                Write-Output "Reloading PATH"
                $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
                echo $env:Path
                [Environment]::SetEnvironmentVariable("PATH", $env:Path + "C:\Program Files (x86)\WiX Toolset v3.11\bin;", "Machine")
                refreshenv
                $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
                echo $env:Path
                npm config set node-gyp "$CIRCLE_WORKING_DIRECTORY\node_modules\node-gyp\bin\node-gyp.js"
                Get-Command npm
                where npm

                yarn syncpack
                yarn build
                yarn test:fast
      - when:
          condition:
            equal: ['linux', << parameters.platform >>]
          steps:
            - run:
                name: setup Linux and run fast tests
                command: |
                  sudo apt-get -y update
                  sudo apt-get install -y --no-install-recommends git flatpak-builder elfutils software-properties-common curl ca-certificates
                  sudo add-apt-repository -y ppa:alexlarsson/flatpak
                  sudo apt-get -y update
            - install:
                platform: '<< parameters.platform >>'
            - run: yarn lint
            - run:
                command: |
                  ls -l ci/
                  ls -l ci/install_runtimes.sh
                  sudo ci/install_runtimes.sh

                  yarn syncpack
                  yarn build
                  yarn test:fast
      - when:
          condition:
            equal: ['macos', << parameters.platform >>]
          steps:
            - run:
                name: run fast tests
                command: |
                  git config --global core.autocrlf input
                  yarn syncpack
                  yarn build
                  yarn test:fast
  slow-tests:
    parameters:
      platform:
        type: string
      arch:
        type: enum
        enum: ['x64', 'arm64']
    executor: << parameters.platform >>
    steps:
      - when:
          condition:
            or:
              - equal: ['windows', << parameters.platform >>]
              - equal: ['macos', << parameters.platform >>]
          steps:
            - install:
                platform: '<< parameters.platform >>'
            - run: yarn lint
      - when:
          condition:
            equal: ['windows', << parameters.platform >>]
          steps:
            - run:
                name: setup Windows and run slow tests
                shell: powershell.exe -ExecutionPolicy Bypass
                command: |
                  git config --global core.autocrlf input
                  Write-Output "Installing WiX Toolset"
                  choco install --no-progress -y wixtoolset
                  Write-Output "Reloading PATH"
                  $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
                  echo $env:Path
                  [Environment]::SetEnvironmentVariable("PATH", $env:Path + "C:\Program Files (x86)\WiX Toolset v3.11\bin;", "Machine")
                  refreshenv
                  $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
                  echo $env:Path
                  npm config set node-gyp "$CIRCLE_WORKING_DIRECTORY\node_modules\node-gyp\bin\node-gyp.js"

                  yarn build
                  yarn test:slow
      - when:
          condition:
            equal: ['linux', << parameters.platform >>]
          steps:
            - run:
                name: setup Linux and run slow tests
                command: |
                  sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 536F8F1DE80F6A35
                  sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4EB27DB2A3B88B8B
                  sudo apt-get update
                  sudo apt-get install -y --no-install-recommends git flatpak-builder elfutils software-properties-common curl ca-certificates
                  sudo add-apt-repository -y ppa:alexlarsson/flatpak
                  sudo apt-get update
            - install:
                platform: '<< parameters.platform >>'
            - run: yarn lint
            - run: cp ./.circleci/snapcraft-wrapper /snap/bin/snapcraft
            - run:
                command: |
                  echo 'export PATH=/snap/bin:"$PATH"' >> "$BASH_ENV"
                  source "$BASH_ENV"
            - run:
                command: |
                  git config --global core.autocrlf input
                  sudo ci/install_runtimes.sh

                  yarn build
                  yarn test:slow
      - when:
          condition:
            equal: ['macos', << parameters.platform >>]
          steps:
            - run:
                name: run slow tests
                command: |
                  git config --global core.autocrlf input
                  yarn build
                  yarn test:slow

workflows:
  tests:
    jobs:
      - fast-tests:
          matrix:
            parameters:
              platform: [windows, linux, macos]
              arch: [x64, arm64]
            exclude:
              - platform: windows
                arch: arm64
              - platform: linux
                arch: arm64
      - slow-tests:
          matrix:
            parameters:
              platform: [windows, linux, macos]
              arch: [x64, arm64]
            exclude:
              - platform: windows
                arch: arm64
              - platform: linux
                arch: arm64
